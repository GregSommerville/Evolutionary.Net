==========================
TO DO
==========================

--------------------------
Blackjack Example
--------------------------
- Refactor the results display code 
- Increase height of display (or make dynamic)
- When calculating display for results, eliminate total of 4 (since it's a pair of 2s), 
	present pairs separately, and make sure main grid does not include them
	- display 22, 33, 44, 55, 66, 77, 88, 99, TT/JJ/QQ/KK, AA - remove AA from Ace section

- UI for #nochange, min/max tree depth, min/max generations, selection style
- Engine.AddAutoDefinedFunction(numParams)



--------------------------
Engine
--------------------------
- EngineParameters.SingleCrossoverAllowed: def = true (50/50 split)
	50% of the time, crossover should take a random subtree from the better candidate and insert into weaker, but not vice-versa

- When randomly constructing, should the node type be selected by category?  
	So if you have 2 functions but 18 terminals, is that 50/50, or 1/9?

- .AddDeferredFunction - calls
	<T> functionName (List<Node<T,S> parameterNodes, S state) - good for boolean shortcircuiting

- .LoadSolution(solutionName, expressionString) : deserializes, opposite of solution.ToString()

- WPF app to load and display any expression tree 


